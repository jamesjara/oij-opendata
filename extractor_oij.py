import urllib
import urllib2
import csv
from pyquery import PyQuery
import geocoder

_URL = 'http://pjenlinea.poder-judicial.go.cr/EstadisticasOIJ/'
_YEAR = '2014'
geocache = {}

def requestRawData(url=None, args=None):

    EncodedValues = {
      'ctl00$ScriptManager1' : 'ctl00$Graficos$UpdatePanel4|ctl00$Graficos$btnDetalleDistritos',
      'ctl00$Graficos$Tbx_FechaInicial': args.get('startDate') or '01/01/2014',
      'ctl00$Graficos$MaskedEditExtender1_ClientState': '',
      'ctl00$Graficos$Tbx_FechaFinal': args.get('endDate') or '31/10/2014',
      'ctl00$Graficos$MaskedEditExtender2_ClientState': '',
      'ctl00$Graficos$Chb_Pais': 'on',
      'ctl00$Graficos$Dpb_Provincia': '0',
      'ctl00$Graficos$Chb_Asalto': args.get('asalto') or '',
      'ctl00$Graficos$Chb_RoboVeh': args.get('roboVeh') or '',
      'ctl00$Graficos$Chb_Robo': args.get('robo') or '',
      'ctl00$Graficos$Chb_Hurto': args.get('hurto') or '',
      'ctl00$Graficos$Chb_TachaVeh': args.get('tachaVeh') or '',
      'ctl00$Graficos$Chb_Homicidios': args.get('homicidios') or '',
      'ctl00$Graficos$Chb_Persona': 'on',
      'ctl00$Graficos$Chb_Vehiculo': 'on',
      'ctl00$Graficos$Chb_CasaHab': 'on',
      'ctl00$Graficos$Chb_Edificacion': 'on',
      'ctl00$Graficos$rbTiempo': 'Btn_dia',
      'ctl00$Graficos$rbDelito': 'btn_Delito',
      '__EVENTTARGET': '',
      '__EVENTARGUMENT': '',
      '__LASTFOCUS': '',
      '__ASYNCPOST': 'true',
      'ctl00$Graficos$btnDetalleDistritos': 'Ver Tabla Datos'
    }

    UnEncodedValues = {
      '__VIEWSTATE': '%2FwEPDwUKLTQ2OTQ4OTY1Nw9kFgJmD2QWAgIDD2QWBgIDDw8WAh4EVGV4dAUHTGVhbHRhZGRkAgUPDxYCHwAFCjMxLzEwLzIwMTRkZAIHD2QWIgIBDw8WAh8ABQozMS8xMC8yMDE0ZGQCBQ8PFgIeCU1heExlbmd0aGZkZAIHDxYIHg5JbnB1dERpcmVjdGlvbgsphgFBamF4Q29udHJvbFRvb2xraXQuTWFza2VkRWRpdElucHV0RGlyZWN0aW9uLCBBamF4Q29udHJvbFRvb2xraXQsIFZlcnNpb249NC4xLjYwOTE5LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MjhmMDFiMGU4NGI2ZDUzZQAeDkFjY2VwdE5lZ2F0aXZlCymCAUFqYXhDb250cm9sVG9vbGtpdC5NYXNrZWRFZGl0U2hvd1N5bWJvbCwgQWpheENvbnRyb2xUb29sa2l0LCBWZXJzaW9uPTQuMS42MDkxOS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTI4ZjAxYjBlODRiNmQ1M2UAHgpBY2NlcHRBbVBtaB4MRGlzcGxheU1vbmV5CysFAGQCCw8PFgQeDEVycm9yTWVzc2FnZWUfAGVkZAIPDw8WAh8BZmRkAhEPFggfAgsrBAAfAwsrBQAfBGgfBQsrBQBkAhUPDxYEHwZlHwBlZGQCGQ9kFgJmD2QWCAIBDxAPFgIeB0NoZWNrZWRnZGRkZAIHDxAPFgQeC18hRGF0YUJvdW5kZx4HRW5hYmxlZGhkEBUIAAlTQU4gSk9Tw4kIQUxBSlVFTEEHQ0FSVEFHTwdIRVJFRElBCkdVQU5BQ0FTVEUKUFVOVEFSRU5BUwZMSU3Dk04VCAEwATEBMgEzATQBNQE2ATcUKwMIZ2dnZ2dnZ2cWAWZkAgsPEA8WAh8JaGRkFgBkAg8PEA8WAh8JaGRkFgBkAkcPZBYCZg9kFgICAQ8PFgIfAAXFAU5PVEEgPGJyIC8%2BIENhdGVnb3LDrWFzIGRlbGljdGl2YXMgaW5jbHVpZGFzOiBBc2FsdG8sICBSb2JvIFZlaMOtY3VsbywgIFJvYm8sICBIdXJ0bywgIFRhY2hhIFZlaMOtY3VsbywgIEhvbWljaWRpb3MuPGJyIC8%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%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQ1TQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQQ0NjI2ZGQCBw8PFgIfAAUENTkyMGRkAggPDxYCHwAFBC0yMSVkZAIDD2QWEmYPDxYCHwAFATNkZAIBDw8WAh8ABQEzZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFCEFMQUpVRUxBZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQQyNTkyZGQCBw8PFgIfAAUEMjU0NGRkAggPDxYCHwAFAjElZGQCBA9kFhJmDw8WAh8ABQE0ZGQCAQ8PFgIfAAUBNGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABQpQVU5UQVJFTkFTZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQQyNDI1ZGQCBw8PFgIfAAUEMjM3N2RkAggPDxYCHwAFAjIlZGQCBQ9kFhJmDw8WAh8ABQE1ZGQCAQ8PFgIfAAUBMWRkAgIPDxYCHwAFATRkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQ1TQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFBDIxNDRkZAIHDw8WAh8ABQQ1OTIwZGQCCA8PFgIfAAUELTYzJWRkAgYPZBYSZg8PFgIfAAUBNmRkAgEPDxYCHwAFATNkZAICDw8WAh8ABQEzZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUIQUxBSlVFTEFkZAIFDw8WAh8ABQRST0JPZGQCBg8PFgIfAAUEMjEyM2RkAgcPDxYCHwAFBDI1NDRkZAIIDw8WAh8ABQQtMTYlZGQCBw9kFhJmDw8WAh8ABQE3ZGQCAQ8PFgIfAAUBOWRkAgIPDxYCHwAFAi0yZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABQpHVUFOQUNBU1RFZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQQxNjk5ZGQCBw8PFgIfAAUEMTQyMmRkAggPDxYCHwAFAzE5JWRkAggPZBYSZg8PFgIfAAUBOGRkAgEPDxYCHwAFAjEwZGQCAg8PFgIfAAUCLTJkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFCkxJTSYjMjExO05kZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQQxNDg2ZGQCBw8PFgIfAAUEMTM4N2RkAggPDxYCHwAFAjclZGQCCQ9kFhJmDw8WAh8ABQE5ZGQCAQ8PFgIfAAUBNGRkAgIPDxYCHwAFATVkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQpQVU5UQVJFTkFTZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFBDE0NzZkZAIHDw8WAh8ABQQyMzc3ZGQCCA8PFgIfAAUELTM3JWRkAgoPZBYSZg8PFgIfAAUCMTBkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUBOWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFDVNBTiBKT1MmIzIwMTtkZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFBDEzMjlkZAIHDw8WAh8ABQQ1OTIwZGQCCA8PFgIfAAUELTc3JWRkAgsPZBYSZg8PFgIfAAUCMTFkZAIBDw8WAh8ABQIxMGRkAgIPDxYCHwAFATFkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQpMSU0mIzIxMTtOZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFBDEzMjNkZAIHDw8WAh8ABQQxMzg3ZGQCCA8PFgIfAAUDLTQlZGQCDA9kFhJmDw8WAh8ABQIxMmRkAgEPDxYCHwAFATlkZAICDw8WAh8ABQEzZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKR1VBTkFDQVNURWRkAgUPDxYCHwAFBFJPQk9kZAIGDw8WAh8ABQQxMjQzZGQCBw8PFgIfAAUEMTQyMmRkAggPDxYCHwAFBC0xMiVkZAIND2QWEmYPDxYCHwAFAjEyZGQCAQ8PFgIfAAUBM2RkAgIPDxYCHwAFATlkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQhBTEFKVUVMQWRkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFBDEyNDNkZAIHDw8WAh8ABQQyNTQ0ZGQCCA8PFgIfAAUELTUxJWRkAg4PZBYSZg8PFgIfAAUCMTRkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUCMTNkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQ1TQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUNUk9CTyBWRUhJQ1VMT2RkAgYPDxYCHwAFBDExODhkZAIHDw8WAh8ABQQ1OTIwZGQCCA8PFgIfAAUELTc5JWRkAg8PZBYSZg8PFgIfAAUCMTVkZAIBDw8WAh8ABQIxMWRkAgIPDxYCHwAFATRkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQdIRVJFRElBZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUEMTE2MWRkAgcPDxYCHwAFBDEyMjFkZAIIDw8WAh8ABQMtNCVkZAIQD2QWEmYPDxYCHwAFAjE2ZGQCAQ8PFgIfAAUCMTBkZAICDw8WAh8ABQE2ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKTElNJiMyMTE7TmRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUEMTEwNmRkAgcPDxYCHwAFBDEzODdkZAIIDw8WAh8ABQQtMjAlZGQCEQ9kFhJmDw8WAh8ABQIxN2RkAgEPDxYCHwAFAjExZGQCAg8PFgIfAAUBNmRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0hFUkVESUFkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFBDEwOTBkZAIHDw8WAh8ABQQxMjIxZGQCCA8PFgIfAAUELTEwJWRkAhIPZBYSZg8PFgIfAAUCMThkZAIBDw8WAh8ABQIxOGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABQdDQVJUQUdPZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUEMTA0MmRkAgcPDxYCHwAFAzk2M2RkAggPDxYCHwAFAjglZGQCEw9kFhJmDw8WAh8ABQIxOWRkAgEPDxYCHwAFAjE4ZGQCAg8PFgIfAAUBMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0NBUlRBR09kZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFBDEwMTlkZAIHDw8WAh8ABQM5NjNkZAIIDw8WAh8ABQI1JWRkAhQPZBYSZg8PFgIfAAUCMjBkZAIBDw8WAh8ABQIxMWRkAgIPDxYCHwAFATlkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQdIRVJFRElBZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFAzkzMGRkAgcPDxYCHwAFBDEyMjFkZAIIDw8WAh8ABQQtMjMlZGQCFQ9kFhJmDw8WAh8ABQIyMWRkAgEPDxYCHwAFAjE4ZGQCAg8PFgIfAAUBM2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0NBUlRBR09kZAIFDw8WAh8ABQRST0JPZGQCBg8PFgIfAAUDOTE1ZGQCBw8PFgIfAAUDOTYzZGQCCA8PFgIfAAUDLTQlZGQCFg9kFhJmDw8WAh8ABQIyMmRkAgEPDxYCHwAFATRkZAICDw8WAh8ABQIxOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFClBVTlRBUkVOQVNkZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQM3NThkZAIHDw8WAh8ABQQyMzc3ZGQCCA8PFgIfAAUELTY4JWRkAhcPZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQEzZGQCAg8PFgIfAAUCMjBkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQhBTEFKVUVMQWRkAgUPDxYCHwAFDVJPQk8gVkVISUNVTE9kZAIGDw8WAh8ABQM2MzhkZAIHDw8WAh8ABQQyNTQ0ZGQCCA8PFgIfAAUELTc0JWRkAhgPZBYSZg8PFgIfAAUCMjRkZAIBDw8WAh8ABQEzZGQCAg8PFgIfAAUCMjFkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQhBTEFKVUVMQWRkAgUPDxYCHwAFDlRBQ0hBIFZFSElDVUxPZGQCBg8PFgIfAAUDNTczZGQCBw8PFgIfAAUEMjU0NGRkAggPDxYCHwAFBC03NyVkZAIZD2QWEmYPDxYCHwAFAjI1ZGQCAQ8PFgIfAAUBOWRkAgIPDxYCHwAFAjE2ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKR1VBTkFDQVNURWRkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzU0NWRkAgcPDxYCHwAFBDE0MjJkZAIIDw8WAh8ABQQtNjElZGQCGg9kFhJmDw8WAh8ABQIyNmRkAgEPDxYCHwAFAjE4ZGQCAg8PFgIfAAUBOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0NBUlRBR09kZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFAzQ2MmRkAgcPDxYCHwAFAzk2M2RkAggPDxYCHwAFBC01MiVkZAIbD2QWEmYPDxYCHwAFAjI3ZGQCAQ8PFgIfAAUCMTFkZAICDw8WAh8ABQIxNmRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0hFUkVESUFkZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFAzQzN2RkAgcPDxYCHwAFBDEyMjFkZAIIDw8WAh8ABQQtNjQlZGQCHA9kFhJmDw8WAh8ABQIyOGRkAgEPDxYCHwAFAjExZGQCAg8PFgIfAAUCMTdkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQdIRVJFRElBZGQCBQ8PFgIfAAUNUk9CTyBWRUhJQ1VMT2RkAgYPDxYCHwAFAzQzNmRkAgcPDxYCHwAFBDEyMjFkZAIIDw8WAh8ABQQtNjQlZGQCHQ9kFhJmDw8WAh8ABQIyOWRkAgEPDxYCHwAFATRkZAICDw8WAh8ABQIyNWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFClBVTlRBUkVOQVNkZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFAzQwOGRkAgcPDxYCHwAFBDIzNzdkZAIIDw8WAh8ABQQtODIlZGQCHg9kFhJmDw8WAh8ABQIzMGRkAgEPDxYCHwAFATlkZAICDw8WAh8ABQIyMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFCkdVQU5BQ0FTVEVkZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFAzMxMmRkAgcPDxYCHwAFBDE0MjJkZAIIDw8WAh8ABQQtNzglZGQCHw9kFhJmDw8WAh8ABQIzMWRkAgEPDxYCHwAFAjEwZGQCAg8PFgIfAAUCMjFkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQpMSU0mIzIxMTtOZGQCBQ8PFgIfAAUNUk9CTyBWRUhJQ1VMT2RkAgYPDxYCHwAFAzI0MWRkAgcPDxYCHwAFBDEzODdkZAIIDw8WAh8ABQQtODIlZGQCIA9kFhJmDw8WAh8ABQIzMmRkAgEPDxYCHwAFATRkZAICDw8WAh8ABQIyOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFClBVTlRBUkVOQVNkZAIFDw8WAh8ABQ1ST0JPIFZFSElDVUxPZGQCBg8PFgIfAAUDMjE5ZGQCBw8PFgIfAAUEMjM3N2RkAggPDxYCHwAFBC05MCVkZAIhD2QWEmYPDxYCHwAFAjMzZGQCAQ8PFgIfAAUCMThkZAICDw8WAh8ABQIxNWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0NBUlRBR09kZAIFDw8WAh8ABQ1ST0JPIFZFSElDVUxPZGQCBg8PFgIfAAUDMjEzZGQCBw8PFgIfAAUDOTYzZGQCCA8PFgIfAAUELTc3JWRkAiIPZBYSZg8PFgIfAAUCMzRkZAIBDw8WAh8ABQIxMGRkAgIPDxYCHwAFAjI0ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKTElNJiMyMTE7TmRkAgUPDxYCHwAFDlRBQ0hBIFZFSElDVUxPZGQCBg8PFgIfAAUDMTU4ZGQCBw8PFgIfAAUEMTM4N2RkAggPDxYCHwAFBC04OCVkZAIjD2QWEmYPDxYCHwAFAjM1ZGQCAQ8PFgIfAAUBOWRkAgIPDxYCHwAFAjI2ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKR1VBTkFDQVNURWRkAgUPDxYCHwAFDVJPQk8gVkVISUNVTE9kZAIGDw8WAh8ABQMxNDNkZAIHDw8WAh8ABQQxNDIyZGQCCA8PFgIfAAUELTg5JWRkAiQPZBYSZg8PFgIfAAUCMzZkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUCMzVkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQ1TQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUDMTMzZGQCBw8PFgIfAAUENTkyMGRkAggPDxYCHwAFBC05NyVkZAIlD2QWEmYPDxYCHwAFAjM3ZGQCAQ8PFgIfAAUCMTBkZAICDw8WAh8ABQIyN2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFCkxJTSYjMjExO05kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQI3MGRkAgcPDxYCHwAFBDEzODdkZAIIDw8WAh8ABQQtOTQlZGQCJg9kFhJmDw8WAh8ABQIzOGRkAgEPDxYCHwAFATNkZAICDw8WAh8ABQIzNWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFCEFMQUpVRUxBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMzZkZAIHDw8WAh8ABQQyNTQ0ZGQCCA8PFgIfAAUELTk4JWRkAicPZBYSZg8PFgIfAAUCMzlkZAIBDw8WAh8ABQE0ZGQCAg8PFgIfAAUCMzVkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQpQVU5UQVJFTkFTZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMzFkZAIHDw8WAh8ABQQyMzc3ZGQCCA8PFgIfAAUELTk4JWRkAigPZBYSZg8PFgIfAAUCNDBkZAIBDw8WAh8ABQIxMWRkAgIPDxYCHwAFAjI5ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUHSEVSRURJQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjE4ZGQCBw8PFgIfAAUEMTIyMWRkAggPDxYCHwAFBC05OCVkZAIpD2QWEmYPDxYCHwAFAjQxZGQCAQ8PFgIfAAUCMThkZAICDw8WAh8ABQIyM2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFB0NBUlRBR09kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQIxNmRkAgcPDxYCHwAFAzk2M2RkAggPDxYCHwAFBC05OCVkZAIqD2QWEmYPDxYCHwAFAjQxZGQCAQ8PFgIfAAUBOWRkAgIPDxYCHwAFAjMyZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUKR1VBTkFDQVNURWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjE2ZGQCBw8PFgIfAAUEMTQyMmRkAggPDxYCHwAFBC05OCVkZAIrDw8WAh8KaGRkAlkPZBYCZg9kFgICAQ88KwARAgAPFgQfCGcfCwIUZAEQFgNmAgECBBYDPCsABQEAFgIfDgUQUG9zaWNpw7NuIEFjdHVhbDwrAAUBABYCHw4FElBvc2ljacOzbiBBbnRlcmlvcjwrAAUBABYCHw4FC1ViaWNhY2nDs24gFgNmZmYWAmYPZBYqAgEPZBYSZg8PFgIfAAUBMWRkAgEPDxYCHwAFATFkZAICDw8WAh8ABQEwZGQCAw9kFgICAQ8PFgIfDwUhfi9JbWFnZW5lcy9Ucmlhbmd1bG9fYW1hcmlsbG8ucG5nZGQCBA8PFgIfAAUbU0FOIEpPUyYjMjAxOyBTQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUEMjY4NWRkAgcPDxYCHwAFBDI3MzJkZAIIDw8WAh8ABQMtMSVkZAICD2QWEmYPDxYCHwAFATJkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUBMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFG1NBTiBKT1MmIzIwMTsgU0FOIEpPUyYjMjAxO2RkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUEMjI1MmRkAgcPDxYCHwAFBDI3MzJkZAIIDw8WAh8ABQQtMTclZGQCAw9kFhJmDw8WAh8ABQEzZGQCAQ8PFgIfAAUBM2RkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRFBTEFKVUVMQSBBTEFKVUVMQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDODI0ZGQCBw8PFgIfAAUDNzUxZGQCCA8PFgIfAAUCOSVkZAIED2QWEmYPDxYCHwAFATRkZAIBDw8WAh8ABQEzZGQCAg8PFgIfAAUBMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFEUFMQUpVRUxBIEFMQUpVRUxBZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUDNjkyZGQCBw8PFgIfAAUDNzUxZGQCCA8PFgIfAAUDLTclZGQCBQ9kFhJmDw8WAh8ABQE1ZGQCAQ8PFgIfAAUBOGRkAgIPDxYCHwAFAi0zZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRpTQU4gSk9TJiMyMDE7IERFU0FNUEFSQURPU2RkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzY4MWRkAgcPDxYCHwAFAzYyOGRkAggPDxYCHwAFAjglZGQCBg9kFhJmDw8WAh8ABQE2ZGQCAQ8PFgIfAAUBNGRkAgIPDxYCHwAFATJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRVQVU5UQVJFTkFTIFBVTlRBUkVOQVNkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzY3MWRkAgcPDxYCHwAFAzczNWRkAggPDxYCHwAFAy04JWRkAgcPZBYSZg8PFgIfAAUBN2RkAgEPDxYCHwAFATZkZAICDw8WAh8ABQExZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUPSEVSRURJQSBIRVJFRElBZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUDNjY1ZGQCBw8PFgIfAAUDNjYzZGQCCA8PFgIfAAUCMCVkZAIID2QWEmYPDxYCHwAFAThkZAIBDw8WAh8ABQE3ZGQCAg8PFgIfAAUBMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFE0FMQUpVRUxBIFNBTiBDQVJMT1NkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzY2NGRkAgcPDxYCHwAFAzYzMGRkAggPDxYCHwAFAjUlZGQCCQ9kFhJmDw8WAh8ABQE5ZGQCAQ8PFgIfAAUBN2RkAgIPDxYCHwAFATJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRNBTEFKVUVMQSBTQU4gQ0FSTE9TZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFAzU3N2RkAgcPDxYCHwAFAzYzMGRkAggPDxYCHwAFAy04JWRkAgoPZBYSZg8PFgIfAAUCMTBkZAIBDw8WAh8ABQE2ZGQCAg8PFgIfAAUBNGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFD0hFUkVESUEgSEVSRURJQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDNTMyZGQCBw8PFgIfAAUDNjYzZGQCCA8PFgIfAAUELTE5JWRkAgsPZBYSZg8PFgIfAAUCMTFkZAIBDw8WAh8ABQIxMmRkAgIPDxYCHwAFAi0xZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRVMSU0mIzIxMTtOIExJTSYjMjExO05kZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQM1MzBkZAIHDw8WAh8ABQM0NTVkZAIIDw8WAh8ABQMxNiVkZAIMD2QWEmYPDxYCHwAFAjEyZGQCAQ8PFgIfAAUBMWRkAgIPDxYCHwAFAjExZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUbU0FOIEpPUyYjMjAxOyBTQU4gSk9TJiMyMDE7ZGQCBQ8PFgIfAAUEUk9CT2RkAgYPDxYCHwAFAzQ4M2RkAgcPDxYCHwAFBDI3MzJkZAIIDw8WAh8ABQQtODIlZGQCDQ9kFhJmDw8WAh8ABQIxM2RkAgEPDxYCHwAFAjEzZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFJVNBTiBKT1MmIzIwMTsgUCYjMjAxO1JFWiBaRUxFRCYjMjExO05kZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzQ3NGRkAgcPDxYCHwAFAzQ1M2RkAggPDxYCHwAFAjQlZGQCDg9kFhJmDw8WAh8ABQIxNGRkAgEPDxYCHwAFAjIwZGQCAg8PFgIfAAUCLTZkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFD0NBUlRBR08gQ0FSVEFHT2RkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzQ2OGRkAgcPDxYCHwAFAzM4NGRkAggPDxYCHwAFAzIxJWRkAg8PZBYSZg8PFgIfAAUCMTVkZAIBDw8WAh8ABQEzZGQCAg8PFgIfAAUCMTJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRFBTEFKVUVMQSBBTEFKVUVMQWRkAgUPDxYCHwAFBFJPQk9kZAIGDw8WAh8ABQM0NTFkZAIHDw8WAh8ABQM3NTFkZAIIDw8WAh8ABQQtMzklZGQCEA9kFhJmDw8WAh8ABQIxNmRkAgEPDxYCHwAFATFkZAICDw8WAh8ABQIxNWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFG1NBTiBKT1MmIzIwMTsgU0FOIEpPUyYjMjAxO2RkAgUPDxYCHwAFDlRBQ0hBIFZFSElDVUxPZGQCBg8PFgIfAAUDNDMzZGQCBw8PFgIfAAUEMjczMmRkAggPDxYCHwAFBC04NCVkZAIRD2QWEmYPDxYCHwAFAjE3ZGQCAQ8PFgIfAAUCMTlkZAICDw8WAh8ABQItMmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUSR1VBTkFDQVNURSBMSUJFUklBZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQM0MzBkZAIHDw8WAh8ABQMzODdkZAIIDw8WAh8ABQMxMSVkZAISD2QWEmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUCMjJkZAICDw8WAh8ABQItNGRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUWTElNJiMyMTE7TiBQT0NPQyYjMjA1O2RkAgUPDxYCHwAFBFJPQk9kZAIGDw8WAh8ABQMzOTZkZAIHDw8WAh8ABQMzNzVkZAIIDw8WAh8ABQI1JWRkAhMPZBYSZg8PFgIfAAUCMTlkZAIBDw8WAh8ABQIzNmRkAgIPDxYCHwAFAy0xN2RkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUVR1VBTkFDQVNURSBTQU5UQSBDUlVaZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMzOTNkZAIHDw8WAh8ABQMyODRkZAIIDw8WAh8ABQMzOCVkZAIUD2QWEmYPDxYCHwAFAjIwZGQCAQ8PFgIfAAUCMjBkZAICDw8WAh8ABQEwZGQCAw9kFgICAQ8PFgIfDwUhfi9JbWFnZW5lcy9Ucmlhbmd1bG9fYW1hcmlsbG8ucG5nZGQCBA8PFgIfAAUPQ0FSVEFHTyBDQVJUQUdPZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMzODNkZAIHDw8WAh8ABQMzODRkZAIIDw8WAh8ABQIwJWRkAhUPDxYCHwpoZGQCWw9kFgJmD2QWAgIBDzwrABECAA8WBB8IZx8LAjJkARAWA2YCAQIEFgM8KwAFAQAWAh8OBRBQb3NpY2nDs24gQWN0dWFsPCsABQEAFgIfDgUSUG9zaWNpw7NuIEFudGVyaW9yPCsABQEAFgIfDgULVWJpY2FjacOzbiAWA2ZmZhYCZg9kFmYCAQ9kFhJmDw8WAh8ABQExZGQCAQ8PFgIfAAUBMWRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRZTQU4gSk9TJiMyMDE7IENBVEVEUkFMZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQM1MDRkZAIHDw8WAh8ABQM0OTJkZAIIDw8WAh8ABQIyJWRkAgIPZBYSZg8PFgIfAAUBMmRkAgEPDxYCHwAFATNkZAICDw8WAh8ABQItMWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUVTElNJiMyMTE7TiBMSU0mIzIxMTtOZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUDNDQyZGQCBw8PFgIfAAUDMzk2ZGQCCA8PFgIfAAUDMTElZGQCAw9kFhJmDw8WAh8ABQEzZGQCAQ8PFgIfAAUBMmRkAgIPDxYCHwAFATFkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRFBTEFKVUVMQSBBTEFKVUVMQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDNDM5ZGQCBw8PFgIfAAUDNDEyZGQCCA8PFgIfAAUCNiVkZAIED2QWEmYPDxYCHwAFATRkZAIBDw8WAh8ABQE1ZGQCAg8PFgIfAAUCLTFkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFlNBTiBKT1MmIzIwMTsgSE9TUElUQUxkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzQwNGRkAgcPDxYCHwAFAzM3MGRkAggPDxYCHwAFAjklZGQCBQ9kFhJmDw8WAh8ABQE1ZGQCAQ8PFgIfAAUBNmRkAgIPDxYCHwAFAi0xZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABQ9MSUJFUklBIExJQkVSSUFkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzQwM2RkAgcPDxYCHwAFAzM2MmRkAggPDxYCHwAFAzExJWRkAgYPZBYSZg8PFgIfAAUBNmRkAgEPDxYCHwAFATFkZAICDw8WAh8ABQE1ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUWU0FOIEpPUyYjMjAxOyBDQVRFRFJBTGRkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzM4MWRkAgcPDxYCHwAFAzQ5MmRkAggPDxYCHwAFBC0yMiVkZAIHD2QWEmYPDxYCHwAFATdkZAIBDw8WAh8ABQIxNGRkAgIPDxYCHwAFAi03ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRRTQU4gSk9TJiMyMDE7IE1FUkNFRGRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMzY2ZGQCBw8PFgIfAAUDMjk4ZGQCCA8PFgIfAAUDMjIlZGQCCA9kFhJmDw8WAh8ABQE4ZGQCAQ8PFgIfAAUBNWRkAgIPDxYCHwAFATNkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRZTQU4gSk9TJiMyMDE7IEhPU1BJVEFMZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUDMzYxZGQCBw8PFgIfAAUDMzcwZGQCCA8PFgIfAAUDLTIlZGQCCQ9kFhJmDw8WAh8ABQE5ZGQCAQ8PFgIfAAUCMTNkZAICDw8WAh8ABQItNGRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUOQUdVSVJSRSBRVUVQT1NkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzM0OWRkAgcPDxYCHwAFAzMxMWRkAggPDxYCHwAFAzEyJWRkAgoPZBYSZg8PFgIfAAUCMTBkZAIBDw8WAh8ABQIxNGRkAgIPDxYCHwAFAi00ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRRTQU4gSk9TJiMyMDE7IE1FUkNFRGRkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzMxMWRkAgcPDxYCHwAFAzI5OGRkAggPDxYCHwAFAjQlZGQCCw9kFhJmDw8WAh8ABQIxMWRkAgEPDxYCHwAFATJkZAICDw8WAh8ABQE5ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAURQUxBSlVFTEEgQUxBSlVFTEFkZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQMzMDdkZAIHDw8WAh8ABQM0MTJkZAIIDw8WAh8ABQQtMjUlZGQCDA9kFhJmDw8WAh8ABQIxMmRkAgEPDxYCHwAFAjE1ZGQCAg8PFgIfAAUCLTNkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFD0hFUkVESUEgSEVSRURJQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMzAzZGQCBw8PFgIfAAUDMjkzZGQCCA8PFgIfAAUCMyVkZAIND2QWEmYPDxYCHwAFAjEzZGQCAQ8PFgIfAAUBOGRkAgIPDxYCHwAFATVkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRdNT05URVMgREUgT0NBIFNBTiBQRURST2RkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMjgyZGQCBw8PFgIfAAUDMzUwZGQCCA8PFgIfAAUELTE5JWRkAg4PZBYSZg8PFgIfAAUCMTNkZAIBDw8WAh8ABQIxOWRkAgIPDxYCHwAFAi02ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABTBQJiMyMDE7UkVaIFpFTEVEJiMyMTE7TiBTQU4gSVNJRFJPIERFIEVMIEdFTkVSQUxkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzI4MmRkAgcPDxYCHwAFAzI3N2RkAggPDxYCHwAFAjElZGQCDw9kFhJmDw8WAh8ABQIxNWRkAgEPDxYCHwAFAjIzZGQCAg8PFgIfAAUCLThkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFVNBTiBKT1MmIzIwMTsgSEFUSUxMT2RkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzI3OGRkAgcPDxYCHwAFAzI1OGRkAggPDxYCHwAFAjclZGQCEA9kFhJmDw8WAh8ABQIxNmRkAgEPDxYCHwAFAThkZAICDw8WAh8ABQE4ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUXTU9OVEVTIERFIE9DQSBTQU4gUEVEUk9kZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQMyNzVkZAIHDw8WAh8ABQMzNTBkZAIIDw8WAh8ABQQtMjElZGQCEQ9kFhJmDw8WAh8ABQIxN2RkAgEPDxYCHwAFAjIwZGQCAg8PFgIfAAUCLTNkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFUhFUkVESUEgU0FOIEZSQU5DSVNDT2RkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzI3MWRkAgcPDxYCHwAFAzI3NmRkAggPDxYCHwAFAy0xJWRkAhIPZBYSZg8PFgIfAAUCMThkZAIBDw8WAh8ABQIyOGRkAgIPDxYCHwAFAy0xMGRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUNTklDT1lBIE5JQ09ZQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMjY2ZGQCBw8PFgIfAAUDMjIxZGQCCA8PFgIfAAUDMjAlZGQCEw9kFhJmDw8WAh8ABQIxOWRkAgEPDxYCHwAFAjE1ZGQCAg8PFgIfAAUBNGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFD0hFUkVESUEgSEVSRURJQWRkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzI2NWRkAgcPDxYCHwAFAzI5M2RkAggPDxYCHwAFAy05JWRkAhQPZBYSZg8PFgIfAAUCMjBkZAIBDw8WAh8ABQIxN2RkAgIPDxYCHwAFATNkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRVTQU4gQ0FSTE9TIFNBTiBDQVJMT1NkZAIFDw8WAh8ABQVIVVJUT2RkAgYPDxYCHwAFAzI2MmRkAgcPDxYCHwAFAzI4N2RkAggPDxYCHwAFAy04JWRkAhUPZBYSZg8PFgIfAAUCMjFkZAIBDw8WAh8ABQIxOGRkAgIPDxYCHwAFATNkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRRTQU4gSk9TJiMyMDE7IENBUk1FTmRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMjU5ZGQCBw8PFgIfAAUDMjgyZGQCCA8PFgIfAAUDLTglZGQCFg9kFhJmDw8WAh8ABQIyMmRkAgEPDxYCHwAFATZkZAICDw8WAh8ABQIxNmRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFD0xJQkVSSUEgTElCRVJJQWRkAgUPDxYCHwAFBFJPQk9kZAIGDw8WAh8ABQMyNTdkZAIHDw8WAh8ABQMzNjJkZAIIDw8WAh8ABQQtMjklZGQCFw9kFhJmDw8WAh8ABQIyMmRkAgEPDxYCHwAFATNkZAICDw8WAh8ABQIxOWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFFUxJTSYjMjExO04gTElNJiMyMTE7TmRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMjU3ZGQCBw8PFgIfAAUDMzk2ZGQCCA8PFgIfAAUELTM1JWRkAhgPZBYSZg8PFgIfAAUCMjRkZAIBDw8WAh8ABQIxMWRkAgIPDxYCHwAFAjEzZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUSR0FSQUJJVE8gSkFDJiMyMTE7ZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMyNTNkZAIHDw8WAh8ABQMzMTRkZAIIDw8WAh8ABQQtMTklZGQCGQ9kFhJmDw8WAh8ABQIyNWRkAgEPDxYCHwAFAjExZGQCAg8PFgIfAAUCMTRkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRNTQU4gSk9TJiMyMDE7IFBBVkFTZGQCBQ8PFgIfAAUGQVNBTFRPZGQCBg8PFgIfAAUDMjUyZGQCBw8PFgIfAAUDMzE0ZGQCCA8PFgIfAAUELTE5JWRkAhoPZBYSZg8PFgIfAAUCMjZkZAIBDw8WAh8ABQIyNGRkAgIPDxYCHwAFATJkZAIDD2QWAgIBDw8WAh8PBR5%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%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRVDVVJSSURBQkFUIENVUlJJREFCQVRkZAIFDw8WAh8ABQZBU0FMVE9kZAIGDw8WAh8ABQMxNjVkZAIHDw8WAh8ABQMxODhkZAIIDw8WAh8ABQQtMTIlZGQCKQ9kFhJmDw8WAh8ABQI0MWRkAgEPDxYCHwAFAjE5ZGQCAg8PFgIfAAUCMjJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABTBQJiMyMDE7UkVaIFpFTEVEJiMyMTE7TiBTQU4gSVNJRFJPIERFIEVMIEdFTkVSQUxkZAIFDw8WAh8ABQRST0JPZGQCBg8PFgIfAAUDMTYxZGQCBw8PFgIfAAUDMjc3ZGQCCA8PFgIfAAUELTQxJWRkAioPZBYSZg8PFgIfAAUCNDJkZAIBDw8WAh8ABQI0N2RkAgIPDxYCHwAFAi01ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABSxTQU4gSk9TJiMyMDE7IFNBTiBGUkFOQ0lTQ08gREUgRE9TIFImIzIwNTtPU2RkAgUPDxYCHwAFBkFTQUxUT2RkAgYPDxYCHwAFAzE1MWRkAgcPDxYCHwAFAzE0NmRkAggPDxYCHwAFAjMlZGQCKw9kFhJmDw8WAh8ABQI0M2RkAgEPDxYCHwAFAjM0ZGQCAg8PFgIfAAUBOWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFGVBPQ09DJiMyMDU7IEdVJiMxOTM7UElMRVNkZAIFDw8WAh8ABQRST0JPZGQCBg8PFgIfAAUDMTQ5ZGQCBw8PFgIfAAUDMTkwZGQCCA8PFgIfAAUELTIxJWRkAiwPZBYSZg8PFgIfAAUCNDRkZAIBDw8WAh8ABQI0MGRkAgIPDxYCHwAFATRkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRNTSVFVSVJSRVMgU0lRVUlSUkVTZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMxNDdkZAIHDw8WAh8ABQMxNzJkZAIIDw8WAh8ABQQtMTQlZGQCLQ9kFhJmDw8WAh8ABQI0NGRkAgEPDxYCHwAFAjYxZGQCAg8PFgIfAAUDLTE3ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABQtVUEFMQSBVUEFMQWRkAgUPDxYCHwAFBUhVUlRPZGQCBg8PFgIfAAUDMTQ3ZGQCBw8PFgIfAAUDMTI0ZGQCCA8PFgIfAAUDMTglZGQCLg9kFhJmDw8WAh8ABQI0NmRkAgEPDxYCHwAFAjYxZGQCAg8PFgIfAAUDLTE1ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRNDT1JSRURPUkVTIENPUlJFRE9SZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMxNDVkZAIHDw8WAh8ABQMxMjRkZAIIDw8WAh8ABQMxNiVkZAIvD2QWEmYPDxYCHwAFAjQ2ZGQCAQ8PFgIfAAUCMjhkZAICDw8WAh8ABQIxOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFDU5JQ09ZQSBOSUNPWUFkZAIFDw8WAh8ABQRST0JPZGQCBg8PFgIfAAUDMTQ1ZGQCBw8PFgIfAAUDMjIxZGQCCA8PFgIfAAUELTM0JWRkAjAPZBYSZg8PFgIfAAUCNDhkZAIBDw8WAh8ABQI2NGRkAgIPDxYCHwAFAy0xNmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUVU0FOIENBUkxPUyBMQSBGT1JUVU5BZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMxNDNkZAIHDw8WAh8ABQMxMjNkZAIIDw8WAh8ABQMxNiVkZAIxD2QWEmYPDxYCHwAFAjQ5ZGQCAQ8PFgIfAAUCNjZkZAICDw8WAh8ABQMtMTdkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFkVTQ0FaJiMyMTg7IFNBTiBSQUZBRUxkZAIFDw8WAh8ABQ5UQUNIQSBWRUhJQ1VMT2RkAgYPDxYCHwAFAzE0MmRkAgcPDxYCHwAFAzEyMWRkAggPDxYCHwAFAzE3JWRkAjIPZBYSZg8PFgIfAAUCNDlkZAIBDw8WAh8ABQI0MWRkAgIPDxYCHwAFAThkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRZQVU5UQVJFTkFTIEMmIzIxMTtCQU5PZGQCBQ8PFgIfAAUFSFVSVE9kZAIGDw8WAh8ABQMxNDJkZAIHDw8WAh8ABQMxNzFkZAIIDw8WAh8ABQQtMTYlZGQCMw8PFgIfCmhkZBgIBSFjdGwwMCRHcmFmaWNvcyRndmRldGFsbGVEaXN0cml0b3MPZ2QFJmN0bDAwJEdyYWZpY29zJGd2RGV0YWxsZU5hY2lvbmFsaWRhZGVzD2dkBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WEwUXY3RsMDAkR3JhZmljb3MkQ2hiX1BhaXMFGWN0bDAwJEdyYWZpY29zJENoYl9Bc2FsdG8FGmN0bDAwJEdyYWZpY29zJENoYl9Sb2JvVmVoBRdjdGwwMCRHcmFmaWNvcyRDaGJfUm9ibwUYY3RsMDAkR3JhZmljb3MkQ2hiX0h1cnRvBRtjdGwwMCRHcmFmaWNvcyRDaGJfVGFjaGFWZWgFHWN0bDAwJEdyYWZpY29zJENoYl9Ib21pY2lkaW9zBRpjdGwwMCRHcmFmaWNvcyRDaGJfUGVyc29uYQUbY3RsMDAkR3JhZmljb3MkQ2hiX1ZlaGljdWxvBRpjdGwwMCRHcmFmaWNvcyRDaGJfQ2FzYUhhYgUeY3RsMDAkR3JhZmljb3MkQ2hiX0VkaWZpY2FjaW9uBRZjdGwwMCRHcmFmaWNvcyRCdG5fZGlhBRZjdGwwMCRHcmFmaWNvcyRCdG5fbWVzBRZjdGwwMCRHcmFmaWNvcyRCdG5fbWVzBRxjdGwwMCRHcmFmaWNvcyRCdG5fdHJpbWVzdHJlBRxjdGwwMCRHcmFmaWNvcyRCdG5fdHJpbWVzdHJlBRljdGwwMCRHcmFmaWNvcyRidG5fRGVsaXRvBRpjdGwwMCRHcmFmaWNvcyRidG5fVmljdGltYQUaY3RsMDAkR3JhZmljb3MkYnRuX1ZpY3RpbWEFGGN0bDAwJEdyYWZpY29zJEdyaWRSZWxvag88KwAMAQgCAWQFH2N0bDAwJEdyYWZpY29zJEdyaWRfUmFua19DYW50b24PPCsADAEIAgFkBSFjdGwwMCRHcmFmaWNvcyRHcmlkX1JhbmtfRGlzdHJpdG8PPCsADAEIAgFkBSBjdGwwMCRHcmFmaWNvcyRndkRldGFsbGVDYW50b25lcw9nZAUiY3RsMDAkR3JhZmljb3MkR3JpZF9SYW5rX1Byb3ZpbmNpYQ88KwAMAQgCAWSjOsVCU6nTuz%2BiKEMosJ8HGCwJqNJAv7sbCH1ARlgGNg%3D%3D',
      '__EVENTVALIDATION': '%2FwEWIwKfu4i%2FBgL029ffAwKXxP2UCgLwoaWSAwLxwvyZDQK47buICQLSyafLCQKK9NqQBALbu76cBQLlgZCGAQKM%2FYGCCAKy6ZSQCQKN%2FYXlAQLGx8LiBgKcgK%2B3AgKM74XZDgKT74XZDgKS74XZDgKR74XZDgKQ74XZDgKX74XZDgKW74XZDgKV74XZDgKytuj6BQKC1Ie%2BCgKRlZLBDgKm%2Be%2FZDgLg%2F5KLAQLTuY2FBgKo%2BYesDAL4xr23CgK9w9O%2FDgLd8%2F2CBgLCg%2BWRDQKU6pdyLrS5%2F6D5T5VL1kIoTJgb0MtsoGiHb5weR%2F3evz1Qn4g%3D'
    }

    data = urllib.urlencode(EncodedValues)
	data+= '&__VIEWSTATE='+UnEncodedValues.get('__VIEWSTATE')+'&__EVENTVALIDATION='+UnEncodedValues.get('__EVENTVALIDATION')
    req = urllib2.Request(url, data)
    req.add_header("Host", "pjenlinea.poder-judicial.go.cr")
    req.add_header("User-Agent", "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:32.0) Gecko/20100101 Firefox/32.0")
    req.add_header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
    req.add_header("Accept-Language", "en-US,en;q=0.5")
    req.add_header("Accept-Encoding", "gzip, deflate")
    req.add_header("X-Requested-With", "XMLHttpRequest")
    req.add_header("X-MicrosoftAjax", "Delta=true")
    req.add_header("Content-Type", "application/x-www-form-urlencoded")
    req.add_header("Referer", "http://pjenlinea.poder-judicial.go.cr/EstadisticasOIJ/")
    req.add_header("Cookie", "ASP.NET_SessionId=zhw4sfbs5mrcajyhe02raz55; ASPSESSIONIDAATRTQDQ=LABFJDJBIIIJOJPJPFKHPMCG")
    req.add_header("Connection", "keep-alive")
    req.add_header("Cache-Control", "no-cache")

    response = urllib2.urlopen(req)
    return response.read()

def parseTableDistritos(html):
    doc = PyQuery(html)
    table = doc('#ctl00_Graficos_gvdetalleDistritos')
    tmp = {}
    firstime = True
    d = 0
    key,val=None,None
    for td in table('td').items():
        if (d%2) == 0:
            tmp[td.text().encode('utf-8')] = td.next().text().encode('utf-8')
        d+=1
    return tmp

#get Asalto 2014
def query(Key='', Year='2014'):
    args = {
     'startDate': '01/01/'+Year,
     'endDate': '31/10/'+Year,
     Key: 'on'
    }
    hmtl= requestRawData(url=_URL, args=args)
    return parseTableDistritos(hmtl)

#number, street, city, countr
def geolocate(zona=''):
    if zona in geocache:
        gps = geocache.get(zona).split(',')
        print 'geolocate %s from cache' % zona
        return "%s,%s" % (gps[0] or '9.9280694', gps[1] or '-84.0907246')
    g = geocoder.google("%s, Costa Rica" % zona)
    geocache[zona] = "%s,%s" % (g.lat or '9.9280694', g.lng or '-84.0907246')
    return geocache[zona]


datos = {}
datos['asalto'] = query(Key='asalto',Year=_YEAR)
datos['roboVeh']= query(Key='roboVeh',Year=_YEAR)
datos['robo']= query(Key='robo',Year=_YEAR)
datos['hurto']= query(Key='hurto',Year=_YEAR)
datos['tachaVeh']= query(Key='tachaVeh',Year=_YEAR)
datos['homicidios']= query(Key='homicidios',Year=_YEAR)


with open('exports.csv', 'wb') as csvfile:
    csv = csv.writer(csvfile, delimiter='|', quoting=csv.QUOTE_MINIMAL)
        or col1 in datos:
    for k,v in datos[col1].items():
    # tipo,zona1,cantidad,ano,gps
        csv.writerow([col1,k,v,_YEAR,geolocate(zona=k)])
