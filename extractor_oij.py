# jamesjara.com for costa rica , open data
# sorry no pep8,broken keyword
import urllib
import urllib2
import csv
from  yquery import PyQuery
import geocoder

_URL = 'http://pjenlinea.poder-judicial.go.cr/EstadisticasOIJ/?a=12'
_YEAR = '2014'
geocache = {}

def requestRawData(url=None, args=None):

    EncodedValues = {
      'ctl00$ScriptManager1' : 'ctl00$Graficos$UpdatePanel4|ctl00$Graficos$btnDetalleDistritos',
      'ctl00$Graficos$Tbx_FechaInicial': args.get('startDate') or '01/01/2014',
      'ctl00$Graficos$MaskedEditExtender1_ClientState': '',
      'ctl00$Graficos$Tbx_FechaFinal': args.get('endDate') or '31/10/2014',
      'ctl00$Graficos$MaskedEditExtender2_ClientState': '',
      'ctl00$Graficos$Chb_Pais': 'on',
      'ctl00$Graficos$Dpb_Provincia': '0',
      'ctl00$Graficos$Chb_Persona': 'on',
      'ctl00$Graficos$Chb_Vehiculo': 'on',
      'ctl00$Graficos$Chb_CasaHab': 'on',
      'ctl00$Graficos$Chb_Edificacion': 'on',
      'ctl00$Graficos$rbTiempo': 'Btn_dia',
      'ctl00$Graficos$rbDelito': 'btn_Delito',
      '__EVENTTARGET': '',
      '__EVENTARGUMENT': '',
      '__LASTFOCUS': '',
      '__ASYNCPOST': 'true',
      'ctl00$Graficos$btnDetalleDistritos': 'Ver Tabla Datos'
    }

    if args.get('robo'):
       EncodedValues['ctl00$Graficos$Chb_Robo'] = args.get('robo');
    if args.get('asalto'):
       EncodedValues['ctl00$Graficos$Chb_Asalto'] = args.get('asalto');
    if args.get('roboVeh'):
       EncodedValues['ctl00$Graficos$Chb_RoboVeh'] = args.get('roboVeh');
    if args.get('hurto'):
       EncodedValues['ctl00$Graficos$Chb_Hurto'] = args.get('hurto');
    if args.get('tachaVeh'):
       EncodedValues['ctl00$Graficos$Chb_TachaVeh'] = args.get('tachaVeh');
    if args.get('homicidios'):
       EncodedValues['ctl00$Graficos$Chb_Homicidios'] = args.get('homicidios');

    UnEncodedValues = {
      '__VIEWSTATE': '%2FwEPDwUKLTQ2OTQ4OTY1Nw9kFgJmD2QWAgIDD2QWBgIDDw8WAh4EVGV4dAUITcOtc3RpY2FkZAIFDw8WAh8ABQozMS8xMC8yMDE0ZGQCBw9kFiICAQ8PFgIfAAUKMzEvMTAvMjAxNGRkAgUPDxYCHglNYXhMZW5ndGhmZGQCBw8WCB4OSW5wdXREaXJlY3Rpb24LKYYBQWpheENvbnRyb2xUb29sa2l0Lk1hc2tlZEVkaXRJbnB1dERpcmVjdGlvbiwgQWpheENvbnRyb2xUb29sa2l0LCBWZXJzaW9uPTQuMS42MDkxOS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTI4ZjAxYjBlODRiNmQ1M2UAHg5BY2NlcHROZWdhdGl2ZQspggFBamF4Q29udHJvbFRvb2xraXQuTWFza2VkRWRpdFNob3dTeW1ib2wsIEFqYXhDb250cm9sVG9vbGtpdCwgVmVyc2lvbj00LjEuNjA5MTkuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0yOGYwMWIwZTg0YjZkNTNlAB4KQWNjZXB0QW1QbWgeDERpc3BsYXlNb25leQsrBQBkAgsPDxYEHgxFcnJvck1lc3NhZ2VlHwBlZGQCDw8PFgIfAWZkZAIRDxYIHwILKwQAHwMLKwUAHwRoHwULKwUAZAIVDw8WBB8GZR8AZWRkAhkPZBYCZg9kFggCAQ8QDxYCHgdDaGVja2VkZ2RkZGQCBw8QDxYEHgtfIURhdGFCb3VuZGceB0VuYWJsZWRoZBAVCAAJU0FOIEpPU8OJCEFMQUpVRUxBB0NBUlRBR08HSEVSRURJQQpHVUFOQUNBU1RFClBVTlRBUkVOQVMGTElNw5NOFQgBMAExATIBMwE0ATUBNgE3FCsDCGdnZ2dnZ2dnFgFmZAILDxAPFgIfCWhkZBYAZAIPDxAPFgIfCWhkZBYAZAJHD2QWAmYPZBYCAgEPDxYCHwAFigFOT1RBIDxiciAvPiBDYXRlZ29yw61hcyBkZWxpY3RpdmFzIGluY2x1aWRhczogSG9taWNpZGlvcy48YnIgLz5Ww61jdGltYXMgaW5jbHVpZGFzOiBQZXJzb25hLCAgVmVow61jdWxvLCAgQ2FzYSBIYWJpdGFjacOzbiwgIEVkaWZpY2FjacO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%%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%2BAEPZBYEZg8PFgIfAAUSQUxGQVJPIFJVSVogQlJJU0FTZGQCAQ8PFgIfAAUBMWRkAvkBD2QWBGYPDxYCHwAFDU1PUkEgVEFCQVJDSUFkZAIBDw8WAh8ABQExZGQC%2BgEPZBYEZg8PFgIfAAUYVFVSUklBTEJBIFNBTlRBIFRFUkVTSVRBZGQCAQ8PFgIfAAUBMWRkAvsBD2QWBGYPDxYCHwAFElRVUlJJQUxCQSBMQSBTVUlaQWRkAgEPDxYCHwAFATFkZAL8AQ9kFgRmDw8WAh8ABRRUSUJBUyBDSU5DTyBFU1FVSU5BU2RkAgEPDxYCHwAFATFkZAL9AQ9kFgRmDw8WAh8ABRRNT1JBVklBIFNBTiBKRVJPTklNT2RkAgEPDxYCHwAFATFkZAL%2BAQ9kFgRmDw8WAh8ABQ9HUkVDSUEgU0FOIEpPU0VkZAIBDw8WAh8ABQExZGQC%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%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABQhBTEFKVUVMQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjM2ZGQCBw8PFgIfAAUCMzhkZAIIDw8WAh8ABQMtNSVkZAIED2QWEmYPDxYCHwAFATRkZAIBDw8WAh8ABQE0ZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFClBVTlRBUkVOQVNkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQIzMWRkAgcPDxYCHwAFAjI1ZGQCCA8PFgIfAAUDMjQlZGQCBQ9kFhJmDw8WAh8ABQE1ZGQCAQ8PFgIfAAUBN2RkAgIPDxYCHwAFAi0yZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABQdIRVJFRElBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMThkZAIHDw8WAh8ABQIxNGRkAggPDxYCHwAFAzI4JWRkAgYPZBYSZg8PFgIfAAUBNmRkAgEPDxYCHwAFATVkZAICDw8WAh8ABQExZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUHQ0FSVEFHT2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjE2ZGQCBw8PFgIfAAUCMThkZAIIDw8WAh8ABQQtMTElZGQCBw9kFhJmDw8WAh8ABQE2ZGQCAQ8PFgIfAAUBNmRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABQpHVUFOQUNBU1RFZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMTZkZAIHDw8WAh8ABQIxNmRkAggPDxYCHwAFAjAlZGQCCA8PFgIfCmhkZAJZD2QWAmYPZBYCAgEPPCsAEQIADxYEHwhnHwsCFGQBEBYDZgIBAgQWAzwrAAUBABYCHw4FEFBvc2ljacOzbiBBY3R1YWw8KwAFAQAWAh8OBRJQb3NpY2nDs24gQW50ZXJpb3I8KwAFAQAWAh8OBQtVYmljYWNpw7NuIBYDZmZmFgJmD2QWKgIBD2QWEmYPDxYCHwAFATFkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFG1NBTiBKT1MmIzIwMTsgU0FOIEpPUyYjMjAxO2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjUyZGQCBw8PFgIfAAUCMzlkZAIIDw8WAh8ABQMzMyVkZAICD2QWEmYPDxYCHwAFATJkZAIBDw8WAh8ABQEyZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFFUxJTSYjMjExO04gTElNJiMyMTE7TmRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjMzZGQCBw8PFgIfAAUCMzJkZAIIDw8WAh8ABQIzJWRkAgMPZBYSZg8PFgIfAAUBM2RkAgEPDxYCHwAFATZkZAICDw8WAh8ABQItM2RkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUaU0FOIEpPUyYjMjAxOyBERVNBTVBBUkFET1NkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQIyNmRkAgcPDxYCHwAFAjE2ZGQCCA8PFgIfAAUDNjIlZGQCBA9kFhJmDw8WAh8ABQE0ZGQCAQ8PFgIfAAUBN2RkAgIPDxYCHwAFAi0zZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRFBTEFKVUVMQSBBTEFKVUVMQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjIyZGQCBw8PFgIfAAUCMTJkZAIIDw8WAh8ABQM4MyVkZAIFD2QWEmYPDxYCHwAFATVkZAIBDw8WAh8ABQE0ZGQCAg8PFgIfAAUBMWRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFGFNBTiBKT1MmIzIwMTsgVElCJiMxOTM7U2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjE1ZGQCBw8PFgIfAAUCMTlkZAIIDw8WAh8ABQQtMjElZGQCBg9kFhJmDw8WAh8ABQE2ZGQCAQ8PFgIfAAUBNWRkAgIPDxYCHwAFATFkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRZMSU0mIzIxMTtOIFBPQ09DJiMyMDU7ZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMTRkZAIHDw8WAh8ABQIxN2RkAggPDxYCHwAFBC0xNyVkZAIHD2QWEmYPDxYCHwAFATdkZAIBDw8WAh8ABQE4ZGQCAg8PFgIfAAUCLTFkZAIDD2QWAgIBDw8WAh8PBR1%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%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFJlNBTiBKT1MmIzIwMTsgViYjMTkzO1NRVUVaIERFIENPUk9OQURPZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBNmRkAgcPDxYCHwAFATNkZAIIDw8WAh8ABQQxMDAlZGQCEA9kFhJmDw8WAh8ABQIxNmRkAgEPDxYCHwAFATNkZAICDw8WAh8ABQIxM2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFGFNBTiBKT1MmIzIwMTsgR09JQ09FQ0hFQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATVkZAIHDw8WAh8ABQIyM2RkAggPDxYCHwAFBC03OCVkZAIRD2QWEmYPDxYCHwAFAjE2ZGQCAQ8PFgIfAAUCMjFkZAICDw8WAh8ABQItNWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUUTElNJiMyMTE7TiBUQUxBTUFOQ0FkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE1ZGQCBw8PFgIfAAUBNGRkAggPDxYCHwAFAzI1JWRkAhIPZBYSZg8PFgIfAAUCMThkZAIBDw8WAh8ABQEwZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFEkdVQU5BQ0FTVEUgQkFHQUNFU2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATRkZAIHDw8WAh8ABQEwZGQCCA8PFgIfAAUENDAwJWRkAhMPZBYSZg8PFgIfAAUCMThkZAIBDw8WAh8ABQIxM2RkAgIPDxYCHwAFATVkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRNBTEFKVUVMQSBTQU4gQ0FSTE9TZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBNGRkAgcPDxYCHwAFATdkZAIIDw8WAh8ABQQtNDIlZGQCFA9kFhJmDw8WAh8ABQIyMGRkAgEPDxYCHwAFAjE3ZGQCAg8PFgIfAAUBM2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFDkFMQUpVRUxBIFVQQUxBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBM2RkAgcPDxYCHwAFATZkZAIIDw8WAh8ABQQtNTAlZGQCFQ8PFgIfCmhkZAJbD2QWAmYPZBYCAgEPPCsAEQIADxYEHwhnHwsCMmQBEBYDZgIBAgQWAzwrAAUBABYCHw4FEFBvc2ljacOzbiBBY3R1YWw8KwAFAQAWAh8OBRJQb3NpY2nDs24gQW50ZXJpb3I8KwAFAQAWAh8OBQtVYmljYWNpw7NuIBYDZmZmFgJmD2QWZgIBD2QWEmYPDxYCHwAFATFkZAIBDw8WAh8ABQExZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFFUxJTSYjMjExO04gTElNJiMyMTE7TmRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjIzZGQCBw8PFgIfAAUCMjhkZAIIDw8WAh8ABQQtMTclZGQCAg9kFhJmDw8WAh8ABQEyZGQCAQ8PFgIfAAUBMmRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRlUSUImIzE5MztTIExFJiMyMTE7TiBYSUlJZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMTJkZAIHDw8WAh8ABQIxMGRkAggPDxYCHwAFAzIwJWRkAgMPZBYSZg8PFgIfAAUBM2RkAgEPDxYCHwAFATRkZAICDw8WAh8ABQItMWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUWU0FOIEpPUyYjMjAxOyBIT1NQSVRBTGRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAjExZGQCBw8PFgIfAAUBOGRkAggPDxYCHwAFAzM3JWRkAgQPZBYSZg8PFgIfAAUBNGRkAgEPDxYCHwAFAjE3ZGQCAg8PFgIfAAUDLTEzZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRlERVNBTVBBUkFET1MgREVTQU1QQVJBRE9TZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUCMTBkZAIHDw8WAh8ABQE0ZGQCCA8PFgIfAAUEMTUwJWRkAgUPZBYSZg8PFgIfAAUBNWRkAgEPDxYCHwAFATJkZAICDw8WAh8ABQEzZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUgU0FOIEpPUyYjMjAxOyBTQU4gU0VCQVNUSSYjMTkzO05kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE5ZGQCBw8PFgIfAAUCMTBkZAIIDw8WAh8ABQQtMTAlZGQCBg9kFhJmDw8WAh8ABQE2ZGQCAQ8PFgIfAAUCMjFkZAICDw8WAh8ABQMtMTVkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFVNBTiBKT1MmIzIwMTsgSEFUSUxMT2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFAThkZAIHDw8WAh8ABQEzZGQCCA8PFgIfAAUEMTY2JWRkAgcPZBYSZg8PFgIfAAUBN2RkAgEPDxYCHwAFAjEwZGQCAg8PFgIfAAUCLTNkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFE1NBTiBKT1MmIzIwMTsgUEFWQVNkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE3ZGQCBw8PFgIfAAUBNWRkAggPDxYCHwAFAzQwJWRkAggPZBYSZg8PFgIfAAUBOGRkAgEPDxYCHwAFAjE3ZGQCAg8PFgIfAAUCLTlkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFFNBTiBKT1MmIzIwMTsgTUVSQ0VEZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBNmRkAgcPDxYCHwAFATRkZAIIDw8WAh8ABQM1MCVkZAIJD2QWEmYPDxYCHwAFAThkZAIBDw8WAh8ABQE2ZGQCAg8PFgIfAAUBMmRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFFkNPUlJFRE9SRVMgUEFTTyBDQU5PQVNkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE2ZGQCBw8PFgIfAAUBN2RkAggPDxYCHwAFBC0xNCVkZAIKD2QWEmYPDxYCHwAFAThkZAIBDw8WAh8ABQI0NGRkAgIPDxYCHwAFAy0zNmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUTQUxBSlVFTEEgU0FOIFJBRkFFTGRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATZkZAIHDw8WAh8ABQEyZGQCCA8PFgIfAAUEMjAwJWRkAgsPZBYSZg8PFgIfAAUBOGRkAgEPDxYCHwAFAjEwZGQCAg8PFgIfAAUCLTJkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFUFMQUpVRUxJVEEgU0FOIEZFTElQRWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATZkZAIHDw8WAh8ABQE1ZGQCCA8PFgIfAAUDMjAlZGQCDA9kFhJmDw8WAh8ABQE4ZGQCAQ8PFgIfAAUCNzBkZAICDw8WAh8ABQMtNjJkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFHExJTSYjMjExO04gVkFMTEUgTEEgRVNUUkVMTEFkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE2ZGQCBw8PFgIfAAUBMWRkAggPDxYCHwAFBDUwMCVkZAIND2QWEmYPDxYCHwAFAThkZAIBDw8WAh8ABQI0NGRkAgIPDxYCHwAFAy0zNmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAURTUFUSU5BIEJBVCYjMTkzO05kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE2ZGQCBw8PFgIfAAUBMmRkAggPDxYCHwAFBDIwMCVkZAIOD2QWEmYPDxYCHwAFAjE0ZGQCAQ8PFgIfAAUCNDRkZAICDw8WAh8ABQMtMzBkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFFUFMQUpVRUxJVEEgQUxBSlVFTElUQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATVkZAIHDw8WAh8ABQEyZGQCCA8PFgIfAAUEMTUwJWRkAg8PZBYSZg8PFgIfAAUCMTRkZAIBDw8WAh8ABQI3MGRkAgIPDxYCHwAFAy01NmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUWREVTQU1QQVJBRE9TIExPUyBHVUlET2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATVkZAIHDw8WAh8ABQExZGQCCA8PFgIfAAUENDAwJWRkAhAPZBYSZg8PFgIfAAUCMTRkZAIBDw8WAh8ABQI3MGRkAgIPDxYCHwAFAy01NmRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUdREVTQU1QQVJBRE9TIFNBTiBSQUZBRUwgQUJBSk9kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE1ZGQCBw8PFgIfAAUBMWRkAggPDxYCHwAFBDQwMCVkZAIRD2QWEmYPDxYCHwAFAjE0ZGQCAQ8PFgIfAAUCMTBkZAICDw8WAh8ABQE0ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUTU0FOIEpPUyYjMjAxOyBVUlVDQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATVkZAIHDw8WAh8ABQE1ZGQCCA8PFgIfAAUCMCVkZAISD2QWEmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUCMTdkZAICDw8WAh8ABQExZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUTU0lRVUlSUkVTIFNJUVVJUlJFU2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATRkZAIHDw8WAh8ABQE0ZGQCCA8PFgIfAAUCMCVkZAITD2QWEmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUCNDRkZAICDw8WAh8ABQMtMjZkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFI1YmIzE5MztTUVVFWiBERSBDT1JPTkFETyBTQU4gSVNJRFJPZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBNGRkAgcPDxYCHwAFATJkZAIIDw8WAh8ABQQxMDAlZGQCFA9kFhJmDw8WAh8ABQIxOGRkAgEPDxYCHwAFAjcwZGQCAg8PFgIfAAUDLTUyZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRhDQVJUQUdPIFNBTiBOSUNPTCYjMTkzO1NkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQE0ZGQCBw8PFgIfAAUBMWRkAggPDxYCHwAFBDMwMCVkZAIVD2QWEmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUBMGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRFBTEFKVUVMQSBBTEFKVUVMQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATRkZAIHDw8WAh8ABQEwZGQCCA8PFgIfAAUENDAwJWRkAhYPZBYSZg8PFgIfAAUCMThkZAIBDw8WAh8ABQEwZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFEUxJTSYjMjExO04gTUFUQU1BZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBNGRkAgcPDxYCHwAFATBkZAIIDw8WAh8ABQQ0MDAlZGQCFw9kFhJmDw8WAh8ABQIyM2RkAgEPDxYCHwAFATBkZAICDw8WAh8ABQEwZGQCAw9kFgICAQ8PFgIfDwUhfi9JbWFnZW5lcy9Ucmlhbmd1bG9fYW1hcmlsbG8ucG5nZGQCBA8PFgIfAAUVUEFMTUFSRVMgQlVFTk9TIEFJUkVTZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBM2RkAgcPDxYCHwAFATBkZAIIDw8WAh8ABQQzMDAlZGQCGA9kFhJmDw8WAh8ABQIyM2RkAgEPDxYCHwAFAjEwZGQCAg8PFgIfAAUCMTNkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABQ9NQVRJTkEgQ0FSUkFORElkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEzZGQCBw8PFgIfAAUBNWRkAggPDxYCHwAFBC00MCVkZAIZD2QWEmYPDxYCHwAFAjIzZGQCAQ8PFgIfAAUCNzBkZAICDw8WAh8ABQMtNDdkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFE0NVUlJJREFCQVQgVElSUkFTRVNkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEzZGQCBw8PFgIfAAUBMWRkAggPDxYCHwAFBDIwMCVkZAIaD2QWEmYPDxYCHwAFAjIzZGQCAQ8PFgIfAAUCMTBkZAICDw8WAh8ABQIxM2RkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFGUdVJiMxOTM7Q0lNTyBHVSYjMTkzO0NJTU9kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEzZGQCBw8PFgIfAAUBNWRkAggPDxYCHwAFBC00MCVkZAIbD2QWEmYPDxYCHwAFAjIzZGQCAQ8PFgIfAAUBMGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRVBTEFKVUVMQSBERVNBTVBBUkFET1NkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEzZGQCBw8PFgIfAAUBMGRkAggPDxYCHwAFBDMwMCVkZAIcD2QWEmYPDxYCHwAFAjIzZGQCAQ8PFgIfAAUCMTdkZAICDw8WAh8ABQE2ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUWQUxBSlVFTEEgU0FOIEpPUyYjMjAxO2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQE0ZGQCCA8PFgIfAAUELTI1JWRkAh0PZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQEwZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFD0JBR0FDRVMgQkFHQUNFU2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQEwZGQCCA8PFgIfAAUEMzAwJWRkAh4PZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQI3MGRkAgIPDxYCHwAFAy00N2RkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUTQ09SUkVET1JFUyBDT1JSRURPUmRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQExZGQCCA8PFgIfAAUEMjAwJWRkAh8PZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQIyMWRkAgIPDxYCHwAFATJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRVDVVJSSURBQkFUIENVUlJJREFCQVRkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEzZGQCBw8PFgIfAAUBM2RkAggPDxYCHwAFAjAlZGQCIA9kFhJmDw8WAh8ABQIyM2RkAgEPDxYCHwAFAjcwZGQCAg8PFgIfAAUDLTQ3ZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRNUVVJSSUFMQkEgVFVSUklBTEJBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBM2RkAgcPDxYCHwAFATFkZAIIDw8WAh8ABQQyMDAlZGQCIQ9kFhJmDw8WAh8ABQIyM2RkAgEPDxYCHwAFAjIxZGQCAg8PFgIfAAUBMmRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFG1NBUkFQSVFVJiMyMDU7IFBVRVJUTyBWSUVKT2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQEzZGQCCA8PFgIfAAUCMCVkZAIiD2QWEmYPDxYCHwAFAjIzZGQCAQ8PFgIfAAUBNGRkAgIPDxYCHwAFAjE5ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUTUE9DT0MmIzIwNTsgQ0FSSUFSSWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQE4ZGQCCA8PFgIfAAUELTYyJWRkAiMPZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQIxMGRkAgIPDxYCHwAFAjEzZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUZUE9DT0MmIzIwNTsgR1UmIzE5MztQSUxFU2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQE1ZGQCCA8PFgIfAAUELTQwJWRkAiQPZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQIyMWRkAgIPDxYCHwAFATJkZAIDD2QWAgIBDw8WAh8PBR5%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb192ZXJkZS5wbmdkZAIEDw8WAh8ABRBQT0NPQyYjMjA1OyBSSVRBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBM2RkAgcPDxYCHwAFATNkZAIIDw8WAh8ABQIwJWRkAiUPZBYSZg8PFgIfAAUCMjNkZAIBDw8WAh8ABQI0NGRkAgIPDxYCHwAFAy0yMWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUTUFVOVEFSRU5BUyBCQVJSQU5DQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATNkZAIHDw8WAh8ABQEyZGQCCA8PFgIfAAUDNTAlZGQCJg9kFhJmDw8WAh8ABQIyM2RkAgEPDxYCHwAFAjQ0ZGQCAg8PFgIfAAUDLTIxZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRZTQU4gSk9TJiMyMDE7IENBVEVEUkFMZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBM2RkAgcPDxYCHwAFATJkZAIIDw8WAh8ABQM1MCVkZAInD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUCMjFkZAICDw8WAh8ABQIxOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFD0xJQkVSSUEgTElCRVJJQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATJkZAIHDw8WAh8ABQEzZGQCCA8PFgIfAAUELTMzJWRkAigPZBYSZg8PFgIfAAUCMzlkZAIBDw8WAh8ABQIyMWRkAgIPDxYCHwAFAjE4ZGQCAw9kFgICAQ8PFgIfDwUefi9JbWFnZW5lcy9Ucmlhbmd1bG9fdmVyZGUucG5nZGQCBA8PFgIfAAUTUFVOVEFSRU5BUyBFTCBST0JMRWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATJkZAIHDw8WAh8ABQEzZGQCCA8PFgIfAAUELTMzJWRkAikPZBYSZg8PFgIfAAUCMzlkZAIBDw8WAh8ABQEwZGQCAg8PFgIfAAUBMGRkAgMPZBYCAgEPDxYCHw8FIX4vSW1hZ2VuZXMvVHJpYW5ndWxvX2FtYXJpbGxvLnBuZ2RkAgQPDxYCHwAFEVNBTiBDQVJMT1MgQ1VUUklTZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBMmRkAgcPDxYCHwAFATBkZAIIDw8WAh8ABQQyMDAlZGQCKg9kFhJmDw8WAh8ABQIzOWRkAgEPDxYCHwAFATBkZAICDw8WAh8ABQEwZGQCAw9kFgICAQ8PFgIfDwUhfi9JbWFnZW5lcy9Ucmlhbmd1bG9fYW1hcmlsbG8ucG5nZGQCBA8PFgIfAAUUUFVOVEFSRU5BUyBDSEFDQVJJVEFkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEyZGQCBw8PFgIfAAUBMGRkAggPDxYCHwAFBDIwMCVkZAIrD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUBMGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRJQT0NPQyYjMjA1OyBST1hBTkFkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEyZGQCBw8PFgIfAAUBMGRkAggPDxYCHwAFBDIwMCVkZAIsD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUCNzBkZAICDw8WAh8ABQMtMzFkZAIDD2QWAgIBDw8WAh8PBR1%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19yb2pvLnBuZ2RkAgQPDxYCHwAFGFBPQ09DJiMyMDU7IEpJTSYjMjAxO05FWmRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATJkZAIHDw8WAh8ABQExZGQCCA8PFgIfAAUEMTAwJWRkAi0PZBYSZg8PFgIfAAUCMzlkZAIBDw8WAh8ABQI3MGRkAgIPDxYCHwAFAy0zMWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUaU0FOIEpPUyYjMjAxOyBNQVRBIFJFRE9OREFkZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEyZGQCBw8PFgIfAAUBMWRkAggPDxYCHwAFBDEwMCVkZAIuD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUBMGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRtTQU5UQSBCJiMxOTM7UkJBUkEgU0FOIEpVQU5kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEyZGQCBw8PFgIfAAUBMGRkAggPDxYCHwAFBDIwMCVkZAIvD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUBMGRkAgIPDxYCHwAFATBkZAIDD2QWAgIBDw8WAh8PBSF%2BL0ltYWdlbmVzL1RyaWFuZ3Vsb19hbWFyaWxsby5wbmdkZAIEDw8WAh8ABRtTQU5UTyBET01JTkdPIFNBTlRPIERPTUlOR09kZAIFDw8WAh8ABQlIT01JQ0lESU9kZAIGDw8WAh8ABQEyZGQCBw8PFgIfAAUBMGRkAggPDxYCHwAFBDIwMCVkZAIwD2QWEmYPDxYCHwAFAjM5ZGQCAQ8PFgIfAAUCMjFkZAICDw8WAh8ABQIxOGRkAgMPZBYCAgEPDxYCHw8FHn4vSW1hZ2VuZXMvVHJpYW5ndWxvX3ZlcmRlLnBuZ2RkAgQPDxYCHwAFEVRBTEFNQU5DQSBDQUhVSVRBZGQCBQ8PFgIfAAUJSE9NSUNJRElPZGQCBg8PFgIfAAUBMmRkAgcPDxYCHwAFATNkZAIIDw8WAh8ABQQtMzMlZGQCMQ9kFhJmDw8WAh8ABQIzOWRkAgEPDxYCHwAFAjcwZGQCAg8PFgIfAAUDLTMxZGQCAw9kFgICAQ8PFgIfDwUdfi9JbWFnZW5lcy9Ucmlhbmd1bG9fcm9qby5wbmdkZAIEDw8WAh8ABRFUQUxBTUFOQ0EgU0lYQU9MQWRkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATJkZAIHDw8WAh8ABQExZGQCCA8PFgIfAAUEMTAwJWRkAjIPZBYSZg8PFgIfAAUCMzlkZAIBDw8WAh8ABQI3MGRkAgIPDxYCHwAFAy0zMWRkAgMPZBYCAgEPDxYCHw8FHX4vSW1hZ2VuZXMvVHJpYW5ndWxvX3Jvam8ucG5nZGQCBA8PFgIfAAUTVVBBTEEgRE9TIFImIzIwNTtPU2RkAgUPDxYCHwAFCUhPTUlDSURJT2RkAgYPDxYCHwAFATJkZAIHDw8WAh8ABQExZGQCCA8PFgIfAAUEMTAwJWRkAjMPDxYCHwpoZGQYCAUhY3RsMDAkR3JhZmljb3MkZ3ZkZXRhbGxlRGlzdHJpdG9zDzwrAAwBCAIBZAUmY3RsMDAkR3JhZmljb3MkZ3ZEZXRhbGxlTmFjaW9uYWxpZGFkZXMPZ2QFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYTBRdjdGwwMCRHcmFmaWNvcyRDaGJfUGFpcwUZY3RsMDAkR3JhZmljb3MkQ2hiX0FzYWx0bwUaY3RsMDAkR3JhZmljb3MkQ2hiX1JvYm9WZWgFF2N0bDAwJEdyYWZpY29zJENoYl9Sb2JvBRhjdGwwMCRHcmFmaWNvcyRDaGJfSHVydG8FG2N0bDAwJEdyYWZpY29zJENoYl9UYWNoYVZlaAUdY3RsMDAkR3JhZmljb3MkQ2hiX0hvbWljaWRpb3MFGmN0bDAwJEdyYWZpY29zJENoYl9QZXJzb25hBRtjdGwwMCRHcmFmaWNvcyRDaGJfVmVoaWN1bG8FGmN0bDAwJEdyYWZpY29zJENoYl9DYXNhSGFiBR5jdGwwMCRHcmFmaWNvcyRDaGJfRWRpZmljYWNpb24FFmN0bDAwJEdyYWZpY29zJEJ0bl9kaWEFFmN0bDAwJEdyYWZpY29zJEJ0bl9tZXMFFmN0bDAwJEdyYWZpY29zJEJ0bl9tZXMFHGN0bDAwJEdyYWZpY29zJEJ0bl90cmltZXN0cmUFHGN0bDAwJEdyYWZpY29zJEJ0bl90cmltZXN0cmUFGWN0bDAwJEdyYWZpY29zJGJ0bl9EZWxpdG8FGmN0bDAwJEdyYWZpY29zJGJ0bl9WaWN0aW1hBRpjdGwwMCRHcmFmaWNvcyRidG5fVmljdGltYQUYY3RsMDAkR3JhZmljb3MkR3JpZFJlbG9qDzwrAAwBCAIBZAUfY3RsMDAkR3JhZmljb3MkR3JpZF9SYW5rX0NhbnRvbg88KwAMAQgCAWQFIWN0bDAwJEdyYWZpY29zJEdyaWRfUmFua19EaXN0cml0bw88KwAMAQgCAWQFIGN0bDAwJEdyYWZpY29zJGd2RGV0YWxsZUNhbnRvbmVzD2dkBSJjdGwwMCRHcmFmaWNvcyRHcmlkX1JhbmtfUHJvdmluY2lhDzwrAAwBCAIBZBMeq%2F4madqxvoMgUfuqGD1xujOByf4XbnCf37nFxrbD',
      '__EVENTVALIDATION': '%2FwEWIwKqppKCCQL029ffAwKXxP2UCgLwoaWSAwLxwvyZDQK47buICQLSyafLCQKK9NqQBALbu76cBQLlgZCGAQKM%2FYGCCAKy6ZSQCQKN%2FYXlAQLGx8LiBgKcgK%2B3AgKM74XZDgKT74XZDgKS74XZDgKR74XZDgKQ74XZDgKX74XZDgKW74XZDgKV74XZDgKytuj6BQKC1Ie%2BCgKRlZLBDgKm%2Be%2FZDgLg%2F5KLAQLTuY2FBgKo%2BYesDAL4xr23CgK9w9O%2FDgLd8%2F2CBgLCg%2BWRDQKU6pdyizkiYynOuwwkoKW5ZF1wyAxXZr4Ru%2F1YC3qLLcH883c%3D'
    }

    data = urllib.urlencode(EncodedValues)
    data+= '&__VIEWSTATE='+UnEncodedValues.get('__VIEWSTATE')+'&__EVENTVALIDATION='+UnEncodedValues.get('__EVENTVALIDATION')
    req = urllib2.Request(url, data)
    req.add_header("Host", "pjenlinea.poder-judicial.go.cr")
    req.add_header("User-Agent", "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:32.0) Gecko/20100101 Firefox/32.0")
    req.add_header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
    req.add_header("Accept-Language", "en-US,en;q=0.5")
    req.add_header("Accept-Encoding", "gzip, deflate")
    req.add_header("X-Requested-With", "XMLHttpRequest")
    req.add_header("X-MicrosoftAjax", "Delta=true")
    req.add_header("Content-Type", "application/x-www-form-urlencoded")
    req.add_header("Referer", "http://pjenlinea.poder-judicial.go.cr/EstadisticasOIJ/")
    req.add_header("Cookie", "ASP.NET_SessionId=hcmv5mus3baowyrgtvzbbrof; ASPSESSIONIDACQTSRCR=IPFBCFCCANFMBIADDOBMONOC")
    req.add_header("Connection", "keep-alive")
    req.add_header("Cache-Control", "no-cache")

    response = urllib2.urlopen(req)
    return response.read()

def parseTableDistritos(html):
    doc = PyQuery(html)
    #TODO if credentials fails
    table = doc('#ctl00_Graficos_gvdetalleDistritos')
    tmp = {}
    firstime = True
    d = 0
    key,val=None,None
    for td in table('td').items():
        if (d%2) == 0:
            tmp[td.text().encode('utf-8')] = td.next().text().encode('utf-8')
        d+=1
    return tmp

#get Asalto 2014
def query(Key='', Year='2014'):
    args = {
     'startDate': '01/01/'+Year,
     'endDate': '31/10/'+Year,
     Key: 'on'
    }
    hmtl= requestRawData(url=_URL, args=args)
    print hmtl
    return parseTableDistritos(hmtl)

#number, street, city, countr
def geolocate(zona=''):
    if zona in geocache:
        gps = geocache.get(zona).split(',')
        print 'geolocate %s from cache' % zona
        return "%s,%s" % (gps[0] or '9.9280694', gps[1] or '-84.0907246')
    g = geocoder.google("%s, Costa Rica" % zona)
    geocache[zona] = "%s,%s" % (g.lat or '9.9280694', g.lng or '-84.0907246')
    return  geocache[zona]


datos = {}
datos['asalto'] = query(Key='asalto',Year=_YEAR)
datos['roboVeh']= query(Key='roboVeh',Year=_YEAR)
datos['robo']= query(Key='robo',Year=_YEAR)
datos['hurto']= query(Key='hurto',Year=_YEAR)
datos['tachaVeh']= query(Key='tachaVeh',Year=_YEAR)
datos['homicidios']= query(Key='homicidios',Year=_YEAR)



with open('exports.csv', 'wb') as csvfile:
    csv = csv.writer(csvfile, delimiter='|', quoting=csv.QUOTE_MINIMAL)
    for col1 in datos:
        for k,v in datos[col1].items():
            # tipo,zona1,cantidad,ano,gps
            csv.writerow([col1,k,v,_YEAR,geolocate(zona=k)])
